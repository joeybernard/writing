Solving Physics Problems on Linux


Several years ago, I wrote an article on using elmer to solve complicated physics problems. Elmer has progressed quite a bit since then, so I thought it would be worth taking a fresh look at elmer and see where it is now. The first step is to get elmer installed on your system. It may exist within you package management system, but these are likely older versions. If you are running a Debian-based system, you can get the latest versions by adding the elmer repository to APT, and installing it from there. You can do this with the commands
   sudo apt-add-repository ppa:elmer-csc-ubuntu/elmer-csc-ppa
   sudo apt-get update
   sudo apt-get install elmerfem-csc
These steps will conflict with the elmer packages that exist in the main Debian repositories, so be sure that they haven't been previously installed on your system. The meta-package elemerfem-csc will also install a number of sample files that we will use as part of the descriptions of the functionality available within elmer.

The first step is to start elmer up. Depending on your desktop environment, there may be an entry within the menu system. If there isn't, you can open up a terminal and start it with the command 'ElmerGUI'. [elmer1.png] This will open up the application and leave you with an empty workspace. Using a program as complicated as elmer involves several steps. Most programs that solve physics problems of this type follow three broad steps. The first, or pre-processing, step involves preparing the problem for solution. This would include defining any materials and their properties, along with any equations that describe the processes that will be taking place. This is also when you would apply a meshing function to break the geometry down into the subsections that will be used during the actual calculation phase. The second, or solver, step is when the input data is supplied to the actual solver functions that apply the equations to the materials described in your problem. The last, or post-processing, step is where you find out what the solution to your problem is. Humans interpret graphical information most easily, so there are tools available in the post-processing step to visualize the final solution and help you see what the results of your problem are.

Since the installation of elmer included a number of sample files, we will go ahead and use these as we look at what kind of work is possible with elmer. These files should all be available in the directory '/usr/share/ElmerGUI/samples', subdivided by the types of the files contained within the samples. We will look at the heat distribution across a pump section and see how the distribution happens. To start with, you will want to open the step file 'pump_carter_sup.stp', which located in the 'step' subdirectory of the samples directory. When you open this file, it gets loaded into the ElmerGUI geometry viewer. [elmer2.png] This viewer allows you to grab the object with your mouse cursor and rotate it around and get a good look at it and make sure that it is structured properly. This object also gets automatically meshed by ElmerGUI so that it can be used in the solver stage. [elmer3.png] Here ,you can see the set of triangles that have been mapped onto you object to define the domains for the solver to operate on. You can verify the actual meshing by clicking on the menu item 'Model->Summary...' and look at the top of the output from the summary information for the summary. [elmer4.png] In this case, you can see that the meshing created 7862 nodes and 34195 volume elements. If this isn't fine enough to handle the accuracy that you are looking for, you can click on the menu item 'View->Cad model...' to bring up the geometry viewer again and click on the menu item 'Model->Preferences...'. If you do make any changes, don't forget to click on the menu item 'Mesh->Remesh' to redo the meshing process. This make take some time if you are adding a significant number of subsections.

Now that our object is loaded, we need to start setting some initial conditions. In this example, we will want to set the temperature on the inside surfaces of the three holes. You can select surfaces by double-clicking on them. If you need to select multiple surfaces, simply hold the control key down at the same time.
Since we want to treat these three surfaces as a single unit, we will need to unify them. You can do this by clicking on the menu item 'Mesh->Unify surface'. To set initial conditions for the entire problem can be done by clicking on the menu item 'Model->Setup...'. [elmer5.png] Here you can set input and output locations, constants, numbers of iterations or time step procedures, among many other options. You also need to add the equations that will define the physical processes that you are actually trying to solve for.

Clicking on the menu item 'Model->Equation->Add...' will open an editing window to create a new equation. [elmer6.png] In this case, we will just add a heat equation to calculate how heat flows through this pump part. Since we need to apply this to the entire object, we can click the apply box for Body 1 here in the equation editor. But what kind of object is this? Clicking on the menu item 'Model->Material...' pops up a window where you can define all of the physical properties of the object. There is also a button, called 'Material library', that allows you to select from a set of pre-defined materials. In this case, we'll set the object to be aluminum. As with the equation editor, you can apply the material type to the object directly here. Clicking the menu item 'Model->Body Force' pops up a window where you can enter values that would represent the right-hand side of the equations. [elmer8.png] Clicking on the menu item 'Model->Boundary Condition' will pop up a new window where you can set boundary conditions for your equations. [elmer9.png] In this case, we need to create a new boundary temperature of 293 degrees Kelvin, which is named RoomTemp. To apply this boundary condition, you need to go back to the main ElmerGUI interface and double-click the surface of the inside of the holes again. A small window will pop up asking you to set a boundary condition, where you can select the RoomTemp condition that we just set. [elmer10.png]

In order to actually run the solver, you need to generate the final input file. You can do this by clicking the menu item 'Sif->Generate'. If you want to take a look at it, you can click the menu item 'Sif->Edit...' to pop up an editor window. [elmer11.png] You will also need to save the entire project so that all of the required files are in a single location before starting the solver. Now you can click the menu item 'Run->Start Solver' to start the whole process. Once it is done, you will get some new output windows popping up. The top one is the convergence monitor, showing you how quickly the solver came to the final solution. [elmer12.png] The results can be visualized by the post-processing step. In this example, you can click on the menu item 'Run->Start ElmerVTK' to get one type of visualization. If you also installed paraview, you can get a very sophisticated visualization application to look at you output files. [elmer13.png]

This article was just a walkthrough of one of the sample problems to see a small cross-section of the available functionality. Hopefully, it filled in some of the missing steps from the sample. Also, hopefully this article has whetted your appetite enough to look at the other sample problems and use them as a jumping off point for your own research interests.



URLS
https://www.csc.fi/web/elmer  -  The main elmer website.



IMAGES
elmer1.png  -  Executing ElmerGUI will start up the main application, which controls all of the other steps involved in using elmer.
elmer2.png  -  The ElmerGUI geometry viewer allows you to see the object that you will be using during your calculations.
elmer3.png  -  ElmerGUI can also handle meshing your objects in the pre-processing step.
elmer4.png  -  The model summary tells you things like the number of nodes, edges and volume elements within your model.
elmer5.png  -  The model setup window allows you to set initial conditions for the entire model as a whole.
elmer6.png  -  You can add equations to define the physical processes that you are trying to model.
elmer7.png  -  You can set all of the physical properties of the materials used within your object.
elmer8.png  -  You can set body forces that define forcing values for the equations being used.
elmer9.png  -  You can set boundary conditions for your equations, to be used by the solver stage.
elmer10.png  -  Select the sections that need to have a boundary condition applied to it.
elmer11.png  -  You can open up an editor to directly manipulate the solver input file.
elmer12.png  -  After the solver is done, you will get a window showing how quickly convergence happened.
elmer13.png  -  Paraview can provide very sophisticated visualization tools for your output files.
