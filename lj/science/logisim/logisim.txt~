Using Linux for Logic


In this column, we have looked at loads of different scientific applications that you can run on your computer to get rather complex calculations done. In all of this, we have not really given any thought to the hardware that this software is running on. This month, we will look at a software package that will let you dive deep down to the level of the logic gates used to build up computational units. At a certain point, you may be asking your hardware to do too much work. In these cases, you need to understand what your hardware is and how it works. So, we will start this month by looking at the lowest level - the lowly logic gate. To that end we will use a software package, named logisim, to be able to play with logic gates in various groupings.

Logisim should be available in most distribution package management systems. For example, in Debian-based distributions, you can install it with the following command.
   sudo apt-get install logisim
You can then start it either from the menu of your desktop environment, or you can open up a terminal and type in 'logisim' and hit enter. [logisim1.png] You should see a main section of the application where you can start to design your logic circuit. On the left-hand side, there is a selection pane with all of the units you can use for your design. These include basic elements like wires, and logic gates, up to more complex units like memory or arithmetic units.

To learn how to start using logisim, we will look at setting up one of the most basic logic circuits, an AND gate. [logisim2.png] Clicking on the 'Gates' entry on the left-hand side, you will see a full list of available logic gates. Clicking on the AND gate allows you to add them to the design pane by clicking on the location where you want them added. At the bottom of the left-hand side, you will see a pane that displays the attributes of the selected gate. You can use this pane to edit these attributes to get the gate to behave exactly the way you want it to. In our example, you will want to change the number of inputs value from 5 to 2. The next step is to add an output pin in order to see when the output is either 1 or 0. Pins are found in the wiring section. On the front side of the AND gate, we will want to add pins to be able to control input. In the attributes for each of the pins, you will see that you can change whether it is supposed to be an output pin or not. You can also set whether the pin is supposed to be a three-state pin or not. The last step is to connect all of these pieces. This is done by simply clicking and dragging between the separate pieces. [logisim3.png] By default, the input pins are currently set to 0, so once the wires are connected you should see that the output is set to 0. In order to toggle the input pins, you need to first select the toggle tool from the toolbar at the top of the window (the one shaped like a pointing hand). Once you have selected this tool, you can click on the input pins to change their states. Once both inputs are set to 1, you should see the output flip to 1 also. 

While you can build your circuits up from first principles and see how they behave, logisim also lets you define the behavior first and generate a circuit that gives you the defined behavior. Clicking on the menu item "Window->Combinational Analysis" pops up a new window where you can do just that. [logisim4.png] The first step is to provide a list of inputs. You simply add a series of labels, one for each input. In our example, we will define an x, y and z. Nect, you will need to click on the outputs tab and do the same for the number of outputs you want to model. In our example, we will just define a single output. The last step is to actually define the behavior linking the inputs to the outputs. This is done through a logic table. In our example, we will have the output as 0, unless either x and z or y and z are high. [logisim5.png] Once you are happy with the definition, you can click on the "Build Circuit" button at the bottom of the window. This pops up a new dialog window where you can define the name and select the destination project, as well as selecting whether to use only NAND gates or to use only 2-input gates. [logisim6.png] You can click on the inputs to toggle them and verify that it behaves as you had planned. There are also 2 other tabs in the Combinational Analysis window, Expression and Minimized. The Expression tab shows you the logical mathematical expression that describes the truth table that you defined. You can further edit your circuit by editing this equation directly. The minimized tab gives you the logical equation as either the sum of products or the product of sums.

Once you have your circuit finished, you can save it in a ".circ" file. These files define a complete circuit that can be reused as a single unit. When you do want to reuse them in a larger, more complex circuit you can click on the menu item "Project->Load Library->Logisim Library..." and selecting the saved file. This allows you to rather quickly build up very complicated computing circuits.



URLS



IMAGES
logisim1.png  -  When you first start logisim up, you get a blank project where you can start to design your first logic circuit.
logisim2.png  -  You can easily add logic gates to your circuit to model computations.
logisim3.png  -  You can add extra items, like inputs and outputs, to your logic circuit.
logisim4.png  -  You can build up your logic circuits in reverse by defining the behavior you wanted first, then allowing it to generate a circuit that gives you this required behavior.
logisim5.png  -  Logisim includes a tool that allows you generate logic circuits based on a truth table that you define to handle the computation that you are interested in modelling.
logisim6.png  -  By using the Combinational Analysis window, you can create more complex circuits based purely on their expected behavior.
