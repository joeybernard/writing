Open Source for the Space-age

NASA has started a rather ambitious project, to provide open source everything. The main site is located at http://open.nasa.gov. From here you have access to data, code and applications, among other things. This is a great launching point for anyone interested in space science and NASA work. What we'll look at here is what kind of code is being made available that you might want to look at and play with.

The type of software available covers several genres. Some are low level, systems layer software. You can go ahead and do some really long distance transfers with the Interplanetary Overlay Network (ION). This is an implementation of the Delay-Tolerant Networking architecture (DTN) as described in the RFC 4838. This software is physically hosted at SourceForge. You can use this code so that you can communicate with your next interplanetary probe.

A bit more down to Earth, there is a middleware package that is actually hosted by the Apache Foundation. You can download and use the Object Oriented Data Technology (OODT) middleware. OODT is component based, so that you can pick and choose which parts you want to use. There are components to handle transparent access to distributed resources, data discovery and query optimization, and distributed processing. There are also components to handle workflow and resource management. Groups that are using include the Children's Hospital of Los Angeles and NASA's Planetary Data System. If you're managing data systems, this might be worth taking a look at.

Getting back to actual science processing, you can download the Data Productivity Toolkit (DPT). This package is a collection of command line tools, written in Python, that lets you work on text data files. These utilities follow the Unix design method of having small utilities that do one task well, and then chaining them together to get more complicated processing done. There are tools for massaging and manipulating your data, tools for doing statistics on that data and even tools for visualizing the data and the results. Many of the tools even provide an API to basic Python and numpy/scipy/matplotlib routines. While we are talking Python and science, you can look at SunPy. SunPy aims to provide a library of routines that are useful in studying solar physics. With it, you can query the Virtual Solar Observatory (VSO) and grab data that you can process. There are many routines that allow you plot this data using various color maps and processing filters. There is a Sun object that contains physical constants useful in solar physics, along with the sun's position and numerous other solar attributes.

A lot of the computational work that is done at NASA involves clusters of machines and massively parallel code. This means that they have had to put together lots of tools to manage these machines. They have also been nice enough to release a lot of this code for public consumption. The first of these is multil, or the Multi-Threaded Multi-Node Utilities. In the standard GNU file tools, cp and md5sum operate as a single threaded process on a single machine. The multil tools provide drop in replacements called mcp and msum. These utilities use multi-threading to make sure each node is kept as busy as possible. Read and write parallelism allows for individual operations of a single copy to be interleaved through asynchronous I/O. Split file processing allows for different threads to operate on different portions of a file in parallel. NASA also provides a utility to make SSH access to your cluster. They provided a middleware utility called mesh (or Middleware Using Existing SSH Hosts) which provides single sign-on capability. Mesh sits on top of SSH, and instead of using the local authorized_keys file loads a file for a dedicated server at run time. Mesh also has it's own shell (called mash) which restricts what applications are available to the user. Using this system, you can dynamically add and remove SSH hosts that are available to be used. Also, because the authentication is handled by a library that is pre-loaded when SSH first starts up, the restrictions are sure to be enforced on the user. Now that you have a connection mechanism, you may need to handle load balancing across all of these machines. Again, NASA comes to your aid. They have a software package called ballast (Balancing Load Across Systems) which might help. This package handles load balancing specifically SSH connections. Each available host runs a ballast client, and there are one or more ballast servers. The servers maintain system load information gathered from the clients and uses it to make decisions about where to send SSH connection requests. Because all of this is handled over SSH, the policy deciding which host to connect to can also take into account the username. This way, you can have policies that specific to each user. This lets you better tune the best options for each user, rather than trying to find a common policy that everyone is forced to use.

Getting back to doing science, and important task is visualization. NASA has released several tools to help you out. The first one we'll look at is World Wind. This is an Earth visualization system. You can use it to get a three dimensional look at the Earth and to see data projected onto the globe. It is a Java application, so it works on any desktop that has a Java virtual machine, as well as in most browsers. It is a full development kit, and has several example applications that you can use as jumping off points for your own code. Taking visualization further from the surface of the Earth, there is ViSBARD (Visual System for Browsing, Analysis, and Retrieval of Data). This application allows you to pull data from multiple satellites and display them concurrently. It also allows for three dimensional viewing of all of this data. This type of vector field information is very difficult to analyze in two dimensional plots, hence the need for this kind of tool. The latest version also allows you to visualize MHD (Magneto-Hydro-Dynamic) models. This way, you can compare results from model calculations to actual satellite measurements. More extensive image processing can be done with the Vision Workbench. This is an application, and a full library of imaging and computer vision algorithms. It isn't meant to be a complete, cutting edge library. Rather, it provides solid implementations of standard algorithms that you can use as starting points in developing your own algorithms.

When you're ready to go and launch your own satellite, you can download and use the Core Flight Executive (cFE). This software is used as the basis for flight data systems and instrumentation. It is written in C and based on OSAL (Operating System Abstraction Layer). It has an executive, along with time and event services. You can track your satellite with the ODTBX (Orbit Determination Toolbox). The ODTBX package handles orbit determination analysis and early mission analysis. It's available as both Matlab code and Java.

The last piece of code we'll look at is S4PM (Simple, Scalable, Script-based Science Processor for Measurements). This actually used at the Goddard Earth Sciences Data and Information Services Center to do their data processing. It is built up out a processing engine, a toolkit and a graphical monitor. The reason for S4PM is to allow a single person to manage hundreds of jobs simultaneously. It is also designed to be relatively easy to set up new processing strings.

The open source project at NASA doesn't just cover code. They have been releasing data, as well. The Kepler project is looking for exo-planets. As we saw above, you can download data from the Solar Dynamics Observatory. You can work on climate data by checking out information from the Tropical Rainfall Measuring Mission. You can look up tons of data from the various Moon missions, from Apollo on up. There is data from the various planetary missions. Climate data and measurements of the Earth are available, too.

We only had time and space to touch on a few of the items that NASA has provided for the public. Hopefully you have seen enough to go and checkout the rest in more detail. There is a lot of science that regular citizens can do, and NASA is doing their part to try and put the tools into your hands.  
