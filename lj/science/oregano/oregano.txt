Designing Electronics with Linux

In many scientific disciplines, the research you may be doing is completely new. It may be so new that there isn't even any instrumentation available to make your experimental measurements. In these cases, you have no choice but to design and build your own measuring devices. While you could build these using trial and error, having a way to model them first to see how they will behave is a much better choice. In steps oregano. With oregano, you can design your circuitry ahead of time and run simulations on it to iron out any problems that you may find with it. The first step is always to get the software installed. Most distributions should have a package for oregano available. If you want to follow the source version, it is available at github. Oregano also needs another software package to handle the actual simulation. The two that it can currently work with are gnucap and ngspice. Either of these two packages need to be installed in order to actually do the calculations needed for the simulation. While this is handled automagically by your distribution's package manager, you will need to install this dependency yourself if you are building from source.

Once you have it installed, you will get a blank new project when you first start up oregano. [oregano1.png] On the right hand side, you should see a list of elements that you can use to build up your circuits. It starts up with the default library selected. This library gives you all of the standard electronic components that you will likely want to use. But this isn't the only library included. You can select from other libraries, such as TTL, Linear, CPU or Power Devices, among others. Each of these libraries contain a list of associated elements that you can use in your circuits. Selecting one of the elements will show a preview of the schematic drawing of that element in the bottom window. You can then drag and drop the element onto your canvas and start building up your circuit. Once you have an element on the canvas, you can double-click the element to edit the properties of this element. [oregano2.png] You will need to click on the "Draw wires" icon at the top of the window in order to connect the elements together into a proper circuit. All circuits have some necessary components in order to actually have a functioning circuit. The first of these is the ground. This element is labeled GND in the default library. Along with ground, you will need some sort of power source. In most cases, you will want some form of DC current. This is provided by the element labeled with VDC in the default library. With these two important elements in your circuit, go ahead wire up the rest of the circuit.

Once you have a circuit made up, you will want to run a simulation to see how it behaves. Because of the nature of electrical circuits, you need to put sensors into the circuit to see how it is behaving. You can click on the "Add voltage clamp" icon at the the top of the window to select the sensor object. Then you can click on the areas of your circuit that you want to measure during the simulation. At each point you click, you will see a new icon on your circuit marking a sensor location. Double-clicking on the clamp will pop up a window where you can set the parameters of what is being measured. [oregano3.png] You need at least one clamp in your circuit before you can run a simulation, otherwise you won't have any measurements to study in your simulation. Once you have all of your clamp points selected, you can go ahead and run the simulation and see what happens by clicking on the "Run a simulation" icon at the top of the window. [oregano4.png] When you do so, oregano will open a new window where you can see a plot of the data registered by the clamp (usually voltage or current).

When you do analysis, you have the choice of two different circuit analysis programs. These are GNUcap and spice. On Ubuntu, the default analysis program that gets installed as a dependency is GNUcap. This means you will need to explicitly install spice if you want to use it instead. To select the analysis engine, you will need to click on "Edit -> Preferences". In this dialog, you can also set whether the log window will automatically open when needed, as well as setting the data paths for the models and libraries that will be available for your circuits. In most cases, you will want to leave these as is. To get you started, oregano comes with several examples. Again, on Ubuntu (since that is my current desktop), these examples are located in
   /usr/share/doc/oregano/examples
You might want to load one of these to get you started. Once you have a completed circuit and want to run a simulation, you will want to set parameters to control this simulation. Click on the menu item "Edit -> Simulation Settings..." to bring up the dialog window. The first tab lets you se analysis parameters like transient options, fourier options, DC sweep options and AC options. Clicking on any of the check boxes will open up a subset of further options for each of these sections. The second tab lets you set a series of analysis options. You can set parameters that may affect your circuit, such as the ambient temperature. Once you have all of the options and parameters set, you can start the simulation by selecting the menu item "Tools -> Simulate", or by pressing F11. Don't forget to attach some test clamps first, otherwise you will get an error. Your simulation will run and pop up a new plot window, where you can look at the values generated within your circuit. You can select whether to look at the transient analysis or AC analysis. On the left, you will see a list of plotting options available. On the right hand side, you will find the actual plot of your data. Only the items that you select from list will be plotted, so that means that when this window first opens, nothing will actually be plotted. You can also plot functions of the values available. For example, you could plot the difference in voltage between to separate test clamps. These functions will be available in the list on the left side so that you can select them and have them plotted on the graph.

You have the ability to include even more complicated elements, like full CPU's to your circuit. The problem with these is that how they respond to electrical signals can be very complicated. These elements need a separate model file that describes this response to signals. Unfortunately, the licensing for model files means that many can not be included with oregano. You will need to go out to the internet and download the model files for the elements that you are interested in. Or, you can create your own model file. In either case, you can place the model files into the directory set in the preferences.

When you want to actually build your circuit, you can export the associated diagram by clicking on the menu item "File -> Export...". You can then export the circuit diagram as either an SVG file, a PDF, a Postscript file, or a PNG. Now, you can go ahead and build your new test equipment, secure in the knowledge that you did some initial testing and should get the behavior you were looking for.


URLs
https://github.com/marc-lorber/oregano


IMAGES
oregano1.png - On startup, you get a blank canvas, along with a parts list to select from.
oregano2.png - The property window depends on which properties are available for that element.
oregano3.png - Here you can select the properties for the clamp.
oregano4.png - Plotting the results of a circuit clamp.
