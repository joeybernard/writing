Physics Analysis Workstation


CERN is the European Laboratory for Particle Physics. It has been in the news quite a bit lately with the discovery of the Higgs Boson at the Large Hadron Collider. Something that many people may not know is that it also has a long tradition of developing software for scientific use. The HTML document format and the first browser were both developed there as a way of using rich documents that could include links between many different sources of information. This was so useful that it ended up sparking the World Wide Web. Along with such widespread software, CERN has been responsible for quite a bit of scientific software. This is especially true for physics software. This issue, we will take a look at a fairly large group of modules and libraries called the Physics Analysis Workstation (PAW). PAW contains several thousand subroutines and programs that are written in FORTRAN, C and even some assembly language code which is built on top of a library called the CERN Program Library (CERNLIB). You can download and install the code from source located at the main website if you have any special needs. But, considering the long list of required external libraries, I would suggest that you avoid this if possible. You should have packages available for your distribution. For Debian-based ones, you can install everything you need with the command
   sudo apt-get install paw
PAW also includes a large series of graphing and data visualization routines to help in data analysis. Sometimes you need to see what your data looks like in order to figure out what further analysis you need to investigate.

PAW is actually an interactive system, where you can apply commands against your data set. The original interface was a command line one, but it has collected several other interfaces that you can try out. If you open a terminal and type in the command 'paw' and hit enter, you are presented with a question as to which terminal type you wish to use. [paw1.png] The default is to use type 1, which...... If you are using PAW on a remote machine, you will probably want to use a different type. You can get a list by typing in '?'. For a regular xterm, you would enter '7879'. Once everything has finished loading, you are presented with a prompt given as
   PAW >
You can now start typing commands and doing your data analysis. But, what commands can you use? Luckily, PAW includes a help system within the program that you can acess by typing the command 'help'. This will pop up a list of topics. Commands in PAW are grouped together in a tree structure, with the top-most level being the topics that pop up when you start the help system. There is also quite a bit of documentation available on the main web site, including tutorials and a very large FAQ.

Since PAW is used for data analysis, we should start with what kinds of data you can use. There are three main data types within PAW: VECTORS, HISTOGRAMS and NTUPLES. VECTORS store arrays of reals or integers. PAW can handle up to three dimensions, or indexes, for these VECTORS. They can be manipulated by the group of VECTOR commands. Commands in PAW are not case sensitive, but in most documentation they are shown in upper case. You can also use abbreviations for commands, as long as they can uniquely be matched to the full command text. So, you can create a new VECTOR of 20 elements with the command
   VECTOR/CREATE  vec1(20)
This new VECTOR is named 'vec1'. You can now add elements to your new vector with the command
   VECTOR/INPUT vec1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
The command takes a vector name and a list of values to add in. This is fine if you are dealing with just a small set of data. If you have larger data sets stored in files, you can use the command 'VECTOR/READ'. This command takes a file name and can take several other options, like the format of the elements, and loads the data into the given VECTORS. The optional format string is similar to those used in reading and writing data in FORTRAN code. So a refresher course may be a good idea if it has been some time since you had to deal with FORTRAN. You can output data to a file with the inverse command 'VECTOR/WRITE'. To visualize your data, you can use the command 'VECTOR/DRAW'. The options available allow you to select whether to draw a histogram, a smooth curve or a bar chart. You can also draw this visualization over top of another graph, too. You can get a list of all of the VECTORS that have been created with the command 'VECTOR/LIST'. You can cleanup unneeded data with the command 'VECTOR/DELETE'. Once you have loaded your data and taken a look at it, you may have an idea of how the different parts are related to each other. You can use the command 'VECTOR/FIT' to take a function, defined by you with a subroutine, and try and fit the data to it. You can also include a set of associated errors when issuing the command.

While PAW is no longer under active development, there is still more than enough really useful code here to keep any scientist busy. If you are doing any work involving data analysis or modeling, especially in C or FORTRAN, it would be well worth your time doing a quick search of the available modules and subroutines in PAW to see if there is anything you can use to make your work progress that much faster. As you can tell, we were only able to cover a very small portion of the functionality available. It will probably worth your while to do a bit of a deeper dive to see what you can mine for your own work.


URLs
http://paw.web.cern.ch/paw/  -  The main web site for PAW
