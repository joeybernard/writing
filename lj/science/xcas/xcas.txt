Symbolic Algebra Everywhere


In previous issues, we have looked at software packages, like Maxima, that can be used to solve symbolic mathematics problems. There are several packages available that can do these types of calculations. This month, we will look at another one named xcas/giac. Xcas is the GUI interface to the system. Giac is the command line program that provides access to the core engine. Xcas has functionality to handle symbolic algebra, two dimensional and three dimensional graphing, spreadsheets, and statistics. It even has its own programming language that you can use to add extra functionality of your own. While you can use the default interface that comes with xcas, you can also link the CAS (Computer Algebra System) engine as a shared library to your own C++ code. There are packages available for many different Linux distributions, but it usually isn't available in the default package management systems. For example, in Ubuntu, you need to add an APT source that points to the home page for xcas. Then you can use
   "sudo apt-get install giac python-giacpy"
to install it on your system.

Once it is installed and you start it up, xcas asks you what mode you want to work in. You can select from spreadsheet, CAS, programming or geometry. Whenever you start a new session within xcas, you will get this same starting interface. If you wish to change it later, you will need to select the menu option "Cfg->General Configuration". This will pop up a new window where you can select the "Level" option. If you select the CAS option, you get the following starting window. [xcas1.png] Opening a new tab with the same level is done by clicking the menu item "File->New Session". You can also open a new tab using any of the available levels, or modes, using menu commands. They are a bit hard to find, though. For example, you can get a new spreadsheet with the menu item "Spreadsheet->New Spreadsheet". There is far too much functionality available within xcas to be able to see how everything works in such a short article, but we will try and look at some of the most interesting parts.

We will start by looking at the command level. This operates in a form similar to the worksheet in Maple or Mathematica. You start with the first empty command line and enter the mathematical expression you want to evaluate. Hitting enter will run the command, display the output in a new pane, and create a new command line and drop the cursor there, ready for your next command. This style should be comfortable to anyone with even a little bit of experience. The keyboard panel at the bottom of the window gives you a selection of common elements that you will likely use within your commands. If you don't need to use it, you can remove that pane by clicking the "Kbd" button at the top of your session window. The library of available commands is very large. Luckily, you can find the majority of them by clicking on the menu item "Cmds". Here, you can find sections for several different areas, such as complex numbers, group theory, calculus or probability.

Everyone knows that no system has everything that you may possibly need when you start doing any kind of scientific computing. This means that you need to be able to add new functionality of your own devising. With xcas, you can create a new function by clicking on the menu item "Prg->New program". [xcas2.png] This will pop up a new window where you can define the name, arguments, locals and a return value. Once you are happy with these settings and click the "OK" button, you will get a new program pane with a template ready for you. You can then add in any other code that is required by your new functionality. There are menu options within the programming pane to help you with the syntax of programming structures, such as loops, conditionals and IO. In xcas, functions need to be compiled before they can be used. This compiling step happens when you click the "OK" button in the programming pane. If there are any errors, you will get a message in the output pane. If there are no errors, you will get a "Success compiling" message.

You can include graphics inline within a session. If you want a general graphics pane, you can click the menu item "Geo->New figure 2d" or "Geo->New figure 3d". This gives you a graphics pane along with an associated command pane where you can enter the plotting commands you want drawn. If you have a specific item drawn, you can select one of the other items in the "Geo" menu section. For example, if you want to graph a function, you can select the menu item "Geo->Graph->Function". This will pop up a new window where you can enter the function you want to graph, along with the limits of the independent variable. [xcas3.png] When you click on "OK", you get the graph drawn inline within your current session [xcars4.png]

Xcas is designed to be reasonably good at interacting with other CAS software. With this idea in mind, it is no surprise that you can import and export worksheets using several different formats. Xcas will handle Maple and Mu PAD file formats fairly well. It can also handle the file format used by TI calculators (like the TI-89 or the Voyage 200). With this type of support, you should be able to share your work with many other people.

With xcas, you can work on almost any system that you have access to. You can use your Linux system to do major amounts of work. Then you can continue that work on your Android or Apple device, or even your Texas Instruments calculator. While the interface is a bit confusing, and the learning curve is a bit steep, there is no denying just how powerful xcas is. Hopefully you can find some really great uses for xcas and giac.


IMAGES
xcas1.png  -  This the opening window in CAS mode.
xcas2.png  -  You can create your own functions in xcas.
xcas3.png  -  Graphing functions is pretty easy.
xcas4.png  -  Graphs show up inline within your session.
